# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'player_turn.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets, QtTest
from PyQt5.QtWidgets import QWidget, QLabel,QMainWindow,QApplication,QDialog

import ressources_combat
from combat_code import *
 

class Ui_Dialog_player_turn(object):
    def setupUi(self, Dialog, pokemonDresseur, pokemonSauvage, combat):
        """
        constructeur de la classe Ui_Dialog_player_turn

        Parameters
        ----------
        Dialog : QtWidget
            fenêtre combat.
        pokemonDresseur : Objet de la classe PokemonDresseur
            pokemon qui va combattre du côté du joueur
        pokemonSauvage : Objet de la classe PokemonSauvage
            pokemon qui combat le pokemon du dresseur
        combat : instance de la classe Combat
            contient les attributs nécessaires

        Returns
        -------
        None.

        """
        #signale le lancement du combat
        #pour friser la fenêtre carte
        signal = True
        
        Dialog.setObjectName("Dialog")
        Dialog.resize(985, 571)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(250, 130, 531, 321))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(320, 330, 151, 111))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(580, 250, 96, 96))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(510, 180, 246, 75))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(250, 250, 246, 75))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(Dialog)
        self.label_6.setGeometry(QtCore.QRect(230, 260, 225, 52))
        self.label_6.setStyleSheet("font: 75 8pt \"System\";")
        self.label_6.setObjectName("label_6")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(420, 350, 171, 31))
        self.pushButton.setStyleSheet("font: 75 8pt \"System\";")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(610, 350, 121, 31))
        self.pushButton_2.setStyleSheet("font: 75 8pt \"System\";")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(Dialog)
        self.pushButton_3.setGeometry(QtCore.QRect(420, 390, 171, 31))
        self.pushButton_3.setStyleSheet("font: 75 8pt \"System\";")
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_9 = QtWidgets.QLabel(Dialog)
        self.label_9.setGeometry(QtCore.QRect(490, 190, 225, 52))
        self.label_9.setStyleSheet("font: 75 8pt \"System\";")
        self.label_9.setObjectName("label_9")
        self.pokemonDresseur = pokemonDresseur
        self.pokemonSauvage = pokemonSauvage
        self.barreDeVieInitJoueur = pokemonDresseur.barreDeVie
        self.barreDeVieInitAdversaire = pokemonSauvage.barreDeVie
        self.nomPokemonJoueur = pokemonDresseur.nom
        self.nomPokemonSauvage = pokemonSauvage.nom
        self.combat = combat
        
        self.retranslateUi(Dialog, pokemonDresseur, pokemonSauvage)  
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        
        return signal

    def retranslateUi(self, Dialog, pokemonDresseur, pokemonSauvage):
        """
        initialise la partie Pokemons
        et PV de l'interface combat.

        Parameters
        ----------
        Dialog : QtWidget
            fenêtre de combat
        pokemonDresseur : Objet de la classe PokemonDresseur
            pokemon qui va combattre du côté du joueur
        pokemonSauvage : Objet de la classe PokemonSauvage
            pokemon qui combat le pokemon du dresseur

        Returns
        -------
        None.

        """
        nomPokemonJoueur = pokemonDresseur.nom
        nomPokemonSauvage = pokemonSauvage.nom
        barreDeVieInitJoueur = pokemonDresseur.barreDeVie
        barreDeVieInitAdversaire = pokemonSauvage.barreDeVie
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "<html><head/><body><p><img src=\":/background/background/background3.png\"/></p></body></html>"))
        self.label_2.setText(_translate("Dialog", "<html><head/><body><p><img src=\":/pokemons/pokemons/" + str(self.nomPokemonJoueur) + "_back.png\"/></p></body></html>"))
        self.label_3.setText(_translate("Dialog", "<html><head/><body><p><img src=\":/pokemons/pokemons/" + str(self.nomPokemonSauvage) + "_front.png\"/></p></body></html>"))
        self.label_4.setText(_translate("Dialog", "<html><head/><body><p><img src=\":/dialog_box/boxes/pngkey.com-dialogue-box-png-4529843(2).png\"/></p></body></html>"))
        self.label_5.setText(_translate("Dialog", "<html><head/><body><p><img src=\":/dialog_box/boxes/pngkey.com-dialogue-box-png-4529843(2).png\"/></p></body></html>"))
        self.label_6.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">" + str(self.nomPokemonJoueur) + "</span></p><p align=\"center\"><span style=\" font-weight:600;\">PV :" + str(barreDeVieInitJoueur) + " / " + str(barreDeVieInitJoueur) + "</span></p></body></html>"))
        self.pushButton.setText(_translate("Dialog", "> Attaque spéciale"))
        self.pushButton_2.setText(_translate("Dialog", "> Fuite"))
        self.pushButton_3.setText(_translate("Dialog", "> Attaque neutre"))
        self.label_9.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">" + str(nomPokemonSauvage) + "</span></p><p align=\"center\"><span style=\" font-weight:600;\">PV : " + str(barreDeVieInitAdversaire) + " / " + str(barreDeVieInitAdversaire) + "</span></p></body></html>"))
        
    def attaque_speciale(self) :
        """
        gère le bouton attaque spéciale
        et entraîne une mise-à-jour 
        des PV du pokemon

        Returns
        -------
        None.

        """
        _translate = QtCore.QCoreApplication.translate
        self.label_9.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">" + str(self.nomPokemonSauvage) + "</span></p><p align=\"center\"><span style=\" font-weight:600;\">PV : " + str(int(self.pokemonSauvage.barreDeVie)) + " / " + str(self.barreDeVieInitAdversaire) + "</span></p></body></html>"))
         


    def attaque_neutre(self) :
        """
        gère le bouton du choix
        "attaque neutre" et entraîne
        une mise-à-jour des PV du pokemon

        Returns
        -------
        Nope.
        """
        _translate = QtCore.QCoreApplication.translate
        self.label_9.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">" + str(self.nomPokemonSauvage) + "</span></p><p align=\"center\"><span style=\" font-weight:600;\">PV : " + str(int(self.pokemonSauvage.barreDeVie)) + " / " + str(self.barreDeVieInitAdversaire) + "</span></p></body></html>"))
       

    def fuite(self) :
        """
        gère la fuite du
        combat par le joueur

        Returns
        -------
        Bool
            signal du joueur ayant fui

        """
        #le combat va s'arrêter
        #on signale à la fenêtre
        #carte qu'elle peut se relancer
        signal = False
        
        #on ferme la fenêtre combat
        #et affiche un message
        print("Fuite... !")
        pygame.mixer.stop()
        musique = pygame.mixer.Sound('musique_map.mp3')
        musique.play()
        self.close()
        return signal
    
    def ButtonResponse(self) :
        """
        initialisation de l'interface combat
        proposant les différentes actions possibles
        au joueur. Appelle les fonctions concernées

        Returns
        -------
        None.

        """
        #le combat a commencé
        signal = True
        
        # Chaque bouton déclenche un ou plusieurs événements
        
        self.pushButton.clicked.connect(self.combat.attaque_speciale) # déclenche l'attaque spéciale
        self.pushButton.clicked.connect(self.attaque_speciale) # met à jour les PV de l'adversaire
        
        self.pushButton.clicked.connect(self.combat.action_pokemon_sauvage) # déclenche le tour de l'adversaire
        self.pushButton.clicked.connect(self.tour_ennemi) # met à jour les PV du pokemon du joueur, et teste si le jeu s'arrête (en cas de victoire ou de défaite)
        
        self.pushButton_3.clicked.connect(self.combat.attaque_neutre) # idem mais déclenche l'attaque neutre
        self.pushButton_3.clicked.connect(self.attaque_neutre)
        
        self.pushButton_3.clicked.connect(self.combat.action_pokemon_sauvage)
        self.pushButton_3.clicked.connect(self.tour_ennemi)
        
        self.pushButton_2.clicked.connect(self.fuite) # ferme la fenêtre et affiche un message de fuite
        
        return signal
        
    def close(self) :
        """
        ferme la fenêtre combat

        Returns
        -------
        None.

        """
        QApplication.instance().quit()
    
    def tour_ennemi(self) :
        """
        gère 
        les tours des joueurs et les
        tours qu'il leur reste à jouer.
        Evalue si le combat doit continuer
        ou s'arrêter ; renvoye un booléen
        selon que le combat continue ou 
        s'arrête (False)

        Returns
        -------
        bool
            signal pour friser ou pas la fenêtre
            de la carte

        """
        signal = True
        
        #Avant que le pokemon sauvage joue son tour on vérifie s'il lui reste des PV. Si oui, le combat continue et c'est à son tour d'attaquer, si non la fenêtre se ferme et un message de victoire s'affiche.
        if self.pokemonSauvage.barreDeVie == 0 :
            signal = False
            self.label_6.hide()
            self.label_4.hide()
            self.label_5.hide()
            self.label_9.hide()
            self.label_3.hide()
            self.label_3.setGeometry(QtCore.QRect(450, 270, 211, 51))
            self.label_3.setStyleSheet("font: 75 18pt \"System\";")
            self.label_3.setObjectName("label_3")
            _translate = QtCore.QCoreApplication.translate
            self.label_3.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-weight:600;\">VICTOIRE !!!</span></p><p><span style=\" font-weight:600;\"><br/></span></p></body></html>"))
            QtTest.QTest.qWait(800)            
            print("Victoire ! ")
            pygame.mixer.stop() 
            musique = pygame.mixer.Sound('musique_map.mp3')
            musique.play()
            self.close()
        
            
        
        # On cache les boutons permettant au joueur de jouer quand c'est au tour de l'adversaire
        self.pushButton.hide() 
        self.pushButton_2.hide()
        self.pushButton_3.hide()
         
        _translate = QtCore.QCoreApplication.translate
        self.label_6.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">" + str(self.nomPokemonJoueur) + "</span></p><p align=\"center\"><span style=\" font-weight:600;\">PV :" + str(int(self.pokemonDresseur.barreDeVie)) + " / " + str(self.barreDeVieInitJoueur) + "</span></p></body></html>"))
        
        # On attend une seconde après l'attaque de l'adversaire pour avoir le 
        #temps de lire quelle attaque a été lancée
        # De plus, cette attente permet d'éviter certains bugs dûs à la 
        #mise à jour rapide de l'écran
        QtTest.QTest.qWait(1000)  
        
        # A la fin du tour de l'adversaire on regarde si les PV du pokemon 
        #du joueur sont tombés à 0, si oui la fenêtre est fermée et un message 
        #de défaite s'affiche, si non c'est le tour du joueur
        if self.pokemonDresseur.barreDeVie == 0 :
            signal = False
            self.label_6.hide() 
            self.label_4.hide()
            self.label_5.hide()
            self.label_9.hide() 
            self.label_2.hide()
            self.label_2.setGeometry(QtCore.QRect(440, 260, 97, 25))
            self.label_2.setStyleSheet("font: 75 18pt \"System\";")
            self.label_2.setObjectName("label_2")
            _translate = QtCore.QCoreApplication.translate
            self.label_2.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-size:24pt; font-weight:600;\">Défaite...</span></p></body></html>"))
            QtTest.QTest.qWait(800)  
            print("Défaite... ")
            pygame.mixer.stop()
            musique = pygame.mixer.Sound('musique_map.mp3')
            musique.play()
            self.close()
           
        else :
            self.tour_joueur()
        
        return signal
        
    def tour_joueur(self) :
        """
        après que la fonction tour_ennemi ait évalué
        si le combat continue ou pas, si le combat continue
        alors la fonction tour_joueur propose au joueur
        de choisir l'action à faire entre attaque spéciale,
        attaque neutre et fuite.

        Returns
        -------
        Bool
            signal pour signifier à la fenêtre de la carte
            doit rester frisée tant que le combat continue

        """
        signal = True
        # Affiche les boutons après le tour de l'adversaire pour que le 
        #joueur puisse jouer à nouveau
        self.pushButton.show()
        self.pushButton_2.show()
        self.pushButton_3.show()
        
        return True
        
        

    